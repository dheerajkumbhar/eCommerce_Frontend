{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";const initialState={cartItems:[]};export const shoppingCartSlice=createSlice({name:\"cartItems\",initialState:initialState,reducers:{setShoppingCart:(state,action)=>{state.cartItems=action.payload;},updateQuantity:(state,action)=>{var _state$cartItems;//payload - cart item that needs to be updated, newquantity\nstate.cartItems=(_state$cartItems=state.cartItems)===null||_state$cartItems===void 0?void 0:_state$cartItems.map(item=>{if(item.id===action.payload.cartItem.id){item.quantity=action.payload.quantity;}return item;});},removeFromCart:(state,action)=>{var _state$cartItems2;//payload - cart item that needs to be updated, newquantity\nstate.cartItems=(_state$cartItems2=state.cartItems)===null||_state$cartItems2===void 0?void 0:_state$cartItems2.filter(item=>{if(item.id===action.payload.cartItem.id){return null;}return item;});}}});export const{setShoppingCart,updateQuantity,removeFromCart}=shoppingCartSlice.actions;export const shoppingCartReducer=shoppingCartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","shoppingCartSlice","name","reducers","setShoppingCart","state","action","payload","updateQuantity","_state$cartItems","map","item","id","cartItem","quantity","removeFromCart","_state$cartItems2","filter","actions","shoppingCartReducer","reducer"],"sources":["C:/redmango_frontend/react_redMango/src/Storage/Redux/shoppingCartSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { shoppingCartModel } from \"../../Interfaces\";\r\n\r\nconst initialState: shoppingCartModel = {\r\n  cartItems: [],\r\n};\r\n\r\nexport const shoppingCartSlice = createSlice({\r\n  name: \"cartItems\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    setShoppingCart: (state, action) => {\r\n      state.cartItems = action.payload;\r\n    },\r\n    updateQuantity: (state, action) => {\r\n      //payload - cart item that needs to be updated, newquantity\r\n      state.cartItems = state.cartItems?.map((item) => {\r\n        if (item.id === action.payload.cartItem.id) {\r\n          item.quantity = action.payload.quantity;\r\n        }\r\n        return item;\r\n      });\r\n    },\r\n    removeFromCart: (state, action) => {\r\n      //payload - cart item that needs to be updated, newquantity\r\n      state.cartItems = state.cartItems?.filter((item) => {\r\n        if (item.id === action.payload.cartItem.id) {\r\n          return null;\r\n        }\r\n        return item;\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setShoppingCart, updateQuantity, removeFromCart } =\r\n  shoppingCartSlice.actions;\r\nexport const shoppingCartReducer = shoppingCartSlice.reducer;\r\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAG9C,KAAM,CAAAC,YAA+B,CAAG,CACtCC,SAAS,CAAE,EACb,CAAC,CAED,MAAO,MAAM,CAAAC,iBAAiB,CAAGH,WAAW,CAAC,CAC3CI,IAAI,CAAE,WAAW,CACjBH,YAAY,CAAEA,YAAY,CAC1BI,QAAQ,CAAE,CACRC,eAAe,CAAEA,CAACC,KAAK,CAAEC,MAAM,GAAK,CAClCD,KAAK,CAACL,SAAS,CAAGM,MAAM,CAACC,OAAO,CAClC,CAAC,CACDC,cAAc,CAAEA,CAACH,KAAK,CAAEC,MAAM,GAAK,KAAAG,gBAAA,CACjC;AACAJ,KAAK,CAACL,SAAS,EAAAS,gBAAA,CAAGJ,KAAK,CAACL,SAAS,UAAAS,gBAAA,iBAAfA,gBAAA,CAAiBC,GAAG,CAAEC,IAAI,EAAK,CAC/C,GAAIA,IAAI,CAACC,EAAE,GAAKN,MAAM,CAACC,OAAO,CAACM,QAAQ,CAACD,EAAE,CAAE,CAC1CD,IAAI,CAACG,QAAQ,CAAGR,MAAM,CAACC,OAAO,CAACO,QAAQ,CACzC,CACA,MAAO,CAAAH,IAAI,CACb,CAAC,CAAC,CACJ,CAAC,CACDI,cAAc,CAAEA,CAACV,KAAK,CAAEC,MAAM,GAAK,KAAAU,iBAAA,CACjC;AACAX,KAAK,CAACL,SAAS,EAAAgB,iBAAA,CAAGX,KAAK,CAACL,SAAS,UAAAgB,iBAAA,iBAAfA,iBAAA,CAAiBC,MAAM,CAAEN,IAAI,EAAK,CAClD,GAAIA,IAAI,CAACC,EAAE,GAAKN,MAAM,CAACC,OAAO,CAACM,QAAQ,CAACD,EAAE,CAAE,CAC1C,MAAO,KAAI,CACb,CACA,MAAO,CAAAD,IAAI,CACb,CAAC,CAAC,CACJ,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEP,eAAe,CAAEI,cAAc,CAAEO,cAAe,CAAC,CAC9Dd,iBAAiB,CAACiB,OAAO,CAC3B,MAAO,MAAM,CAAAC,mBAAmB,CAAGlB,iBAAiB,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}