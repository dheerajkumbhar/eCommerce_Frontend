{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartItems: []\n};\nexport const shoppingCartSlice = createSlice({\n  name: \"cartItems\",\n  initialState: initialState,\n  reducers: {\n    setShoppingCart: (state, action) => {\n      state.cartItems = action.payload;\n    },\n    updateQuantity: (state, action) => {\n      var _state$cartItems;\n      //payload - cart item that needs to be updated, newquantity\n      state.cartItems = (_state$cartItems = state.cartItems) === null || _state$cartItems === void 0 ? void 0 : _state$cartItems.map(item => {\n        if (item.id === action.payload.cartItem.id) {\n          item.quantity = action.payload.quantity;\n        }\n        return item;\n      });\n    },\n    removeFromCart: (state, action) => {\n      var _state$cartItems2;\n      //payload - cart item that needs to be updated, newquantity\n      state.cartItems = (_state$cartItems2 = state.cartItems) === null || _state$cartItems2 === void 0 ? void 0 : _state$cartItems2.filter(item => {\n        if (item.id === action.payload.cartItem.id) {\n          return null;\n        }\n        return item;\n      });\n    }\n  }\n});\nexport const {\n  setShoppingCart,\n  updateQuantity,\n  removeFromCart\n} = shoppingCartSlice.actions;\nexport const shoppingCartReducer = shoppingCartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","shoppingCartSlice","name","reducers","setShoppingCart","state","action","payload","updateQuantity","_state$cartItems","map","item","id","cartItem","quantity","removeFromCart","_state$cartItems2","filter","actions","shoppingCartReducer","reducer"],"sources":["C:/redmango_frontend/react_redMango/src/Storage/Redux/shoppingCartSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { shoppingCartModel } from \"../../Interfaces\";\r\n\r\nconst initialState: shoppingCartModel = {\r\n  cartItems: [],\r\n};\r\n\r\nexport const shoppingCartSlice = createSlice({\r\n  name: \"cartItems\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    setShoppingCart: (state, action) => {\r\n      state.cartItems = action.payload;\r\n    },\r\n    updateQuantity: (state, action) => {\r\n      //payload - cart item that needs to be updated, newquantity\r\n      state.cartItems = state.cartItems?.map((item) => {\r\n        if (item.id === action.payload.cartItem.id) {\r\n          item.quantity = action.payload.quantity;\r\n        }\r\n        return item;\r\n      });\r\n    },\r\n    removeFromCart: (state, action) => {\r\n      //payload - cart item that needs to be updated, newquantity\r\n      state.cartItems = state.cartItems?.filter((item) => {\r\n        if (item.id === action.payload.cartItem.id) {\r\n          return null;\r\n        }\r\n        return item;\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setShoppingCart, updateQuantity, removeFromCart } =\r\n  shoppingCartSlice.actions;\r\nexport const shoppingCartReducer = shoppingCartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C,MAAMC,YAA+B,GAAG;EACtCC,SAAS,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGH,WAAW,CAAC;EAC3CI,IAAI,EAAE,WAAW;EACjBH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACRC,eAAe,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAClCD,KAAK,CAACL,SAAS,GAAGM,MAAM,CAACC,OAAO;IAClC,CAAC;IACDC,cAAc,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAAA,IAAAG,gBAAA;MACjC;MACAJ,KAAK,CAACL,SAAS,IAAAS,gBAAA,GAAGJ,KAAK,CAACL,SAAS,cAAAS,gBAAA,uBAAfA,gBAAA,CAAiBC,GAAG,CAAEC,IAAI,IAAK;QAC/C,IAAIA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO,CAACM,QAAQ,CAACD,EAAE,EAAE;UAC1CD,IAAI,CAACG,QAAQ,GAAGR,MAAM,CAACC,OAAO,CAACO,QAAQ;QACzC;QACA,OAAOH,IAAI;MACb,CAAC,CAAC;IACJ,CAAC;IACDI,cAAc,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAAA,IAAAU,iBAAA;MACjC;MACAX,KAAK,CAACL,SAAS,IAAAgB,iBAAA,GAAGX,KAAK,CAACL,SAAS,cAAAgB,iBAAA,uBAAfA,iBAAA,CAAiBC,MAAM,CAAEN,IAAI,IAAK;QAClD,IAAIA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO,CAACM,QAAQ,CAACD,EAAE,EAAE;UAC1C,OAAO,IAAI;QACb;QACA,OAAOD,IAAI;MACb,CAAC,CAAC;IACJ;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEP,eAAe;EAAEI,cAAc;EAAEO;AAAe,CAAC,GAC9Dd,iBAAiB,CAACiB,OAAO;AAC3B,OAAO,MAAMC,mBAAmB,GAAGlB,iBAAiB,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}