{"ast":null,"code":"import{createApi,fetchBaseQuery}from\"@reduxjs/toolkit/query/react\";const shoppingCartApi=createApi({reducerPath:\"shoppingCartApi\",baseQuery:fetchBaseQuery({baseUrl:process.env.REACT_APP_API_BASE_URL,prepareHeaders:(headers,api)=>{const token=localStorage.getItem(\"token\");token&&headers.append(\"Authorization\",\"Bearer \"+token);}}),tagTypes:[\"ShoppingCarts\"],endpoints:builder=>({getShoppingCart:builder.query({query:userId=>({url:\"shoppingcart\",params:{userId:userId}}),providesTags:[\"ShoppingCarts\"]}),updateShoppingCart:builder.mutation({query:_ref=>{let{menuItemId,updateQuantityBy,userId}=_ref;return{url:\"shoppingcart\",method:\"POST\",params:{menuItemId,updateQuantityBy,userId}};},invalidatesTags:[\"ShoppingCarts\"]})})});export const{useGetShoppingCartQuery,useUpdateShoppingCartMutation}=shoppingCartApi;export default shoppingCartApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","shoppingCartApi","reducerPath","baseQuery","baseUrl","process","env","REACT_APP_API_BASE_URL","prepareHeaders","headers","api","token","localStorage","getItem","append","tagTypes","endpoints","builder","getShoppingCart","query","userId","url","params","providesTags","updateShoppingCart","mutation","_ref","menuItemId","updateQuantityBy","method","invalidatesTags","useGetShoppingCartQuery","useUpdateShoppingCartMutation"],"sources":["C:/redmango_frontend/react_redMango/src/Apis/shoppingCartApi.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst shoppingCartApi = createApi({\r\n  reducerPath: \"shoppingCartApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: process.env.REACT_APP_API_BASE_URL,\r\n    prepareHeaders: (headers: Headers, api) => {\r\n      const token = localStorage.getItem(\"token\");\r\n      token && headers.append(\"Authorization\", \"Bearer \" + token);\r\n    },\r\n  }),\r\n  tagTypes: [\"ShoppingCarts\"],\r\n  endpoints: (builder) => ({\r\n    getShoppingCart: builder.query({\r\n      query: (userId) => ({\r\n        url: `shoppingcart`,\r\n        params: {\r\n          userId: userId,\r\n        },\r\n      }),\r\n      providesTags: [\"ShoppingCarts\"],\r\n    }),\r\n    updateShoppingCart: builder.mutation({\r\n      query: ({ menuItemId, updateQuantityBy, userId }) => ({\r\n        url: \"shoppingcart\",\r\n        method: \"POST\",\r\n        params: {\r\n          menuItemId,\r\n          updateQuantityBy,\r\n          userId,\r\n        },\r\n      }),\r\n      invalidatesTags: [\"ShoppingCarts\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetShoppingCartQuery, useUpdateShoppingCartMutation } =\r\n  shoppingCartApi;\r\nexport default shoppingCartApi;\r\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,cAAc,KAAQ,8BAA8B,CAExE,KAAM,CAAAC,eAAe,CAAGF,SAAS,CAAC,CAChCG,WAAW,CAAE,iBAAiB,CAC9BC,SAAS,CAAEH,cAAc,CAAC,CACxBI,OAAO,CAAEC,OAAO,CAACC,GAAG,CAACC,sBAAsB,CAC3CC,cAAc,CAAEA,CAACC,OAAgB,CAAEC,GAAG,GAAK,CACzC,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3CF,KAAK,EAAIF,OAAO,CAACK,MAAM,CAAC,eAAe,CAAE,SAAS,CAAGH,KAAK,CAAC,CAC7D,CACF,CAAC,CAAC,CACFI,QAAQ,CAAE,CAAC,eAAe,CAAC,CAC3BC,SAAS,CAAGC,OAAO,GAAM,CACvBC,eAAe,CAAED,OAAO,CAACE,KAAK,CAAC,CAC7BA,KAAK,CAAGC,MAAM,GAAM,CAClBC,GAAG,eAAgB,CACnBC,MAAM,CAAE,CACNF,MAAM,CAAEA,MACV,CACF,CAAC,CAAC,CACFG,YAAY,CAAE,CAAC,eAAe,CAChC,CAAC,CAAC,CACFC,kBAAkB,CAAEP,OAAO,CAACQ,QAAQ,CAAC,CACnCN,KAAK,CAAEO,IAAA,MAAC,CAAEC,UAAU,CAAEC,gBAAgB,CAAER,MAAO,CAAC,CAAAM,IAAA,OAAM,CACpDL,GAAG,CAAE,cAAc,CACnBQ,MAAM,CAAE,MAAM,CACdP,MAAM,CAAE,CACNK,UAAU,CACVC,gBAAgB,CAChBR,MACF,CACF,CAAC,EAAC,CACFU,eAAe,CAAE,CAAC,eAAe,CACnC,CAAC,CACH,CAAC,CACH,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEC,uBAAuB,CAAEC,6BAA8B,CAAC,CACrE/B,eAAe,CACjB,cAAe,CAAAA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}