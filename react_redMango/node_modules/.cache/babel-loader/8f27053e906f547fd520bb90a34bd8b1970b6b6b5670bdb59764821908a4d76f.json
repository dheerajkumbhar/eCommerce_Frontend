{"ast":null,"code":"var _jsxFileName = \"C:\\\\redmango_frontend\\\\react_redMango\\\\src\\\\Components\\\\Page\\\\Payment\\\\PaymentForm.tsx\",\n  _s = $RefreshSig$();\nimport { useStripe, useElements, PaymentElement } from \"@stripe/react-stripe-js\";\nimport { useState } from \"react\";\nimport { useCreateOrderMutation } from \"../../../Apis/orderApi\";\nimport { toastNotify } from \"../../../Helper\";\nimport { SD_Status } from \"../../../Utility/SD\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentForm = ({\n  data,\n  userInput\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [createOrder] = useCreateOrderMutation();\n  const [isProcessing, setIsProcessing] = useState(false);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    setIsProcessing(true);\n    const result = await stripe.confirmPayment({\n      //`Elements` instance that was used to create the Payment Element\n      elements,\n      confirmParams: {\n        return_url: \"https://example.com/order/123/complete\"\n      },\n      redirect: \"if_required\"\n    });\n    if (result.error) {\n      // Show error to your customer (for example, payment details incomplete)\n      toastNotify(\"An unexpected error occured.\", \"error\");\n      setIsProcessing(false);\n    } else {\n      var _data$cartItems;\n      let grandTotal = 0;\n      let totalItems = 0;\n      const orderDetailsDTO = [];\n      (_data$cartItems = data.cartItems) === null || _data$cartItems === void 0 ? void 0 : _data$cartItems.forEach(item => {\n        var _item$menuItem, _item$menuItem2, _item$menuItem3, _item$menuItem4;\n        const tempOrderDetail = {};\n        tempOrderDetail[\"menuItemId\"] = (_item$menuItem = item.menuItem) === null || _item$menuItem === void 0 ? void 0 : _item$menuItem.id;\n        tempOrderDetail[\"quantity\"] = item.quantity;\n        tempOrderDetail[\"itemName\"] = (_item$menuItem2 = item.menuItem) === null || _item$menuItem2 === void 0 ? void 0 : _item$menuItem2.name;\n        tempOrderDetail[\"price\"] = (_item$menuItem3 = item.menuItem) === null || _item$menuItem3 === void 0 ? void 0 : _item$menuItem3.price;\n        orderDetailsDTO.push(tempOrderDetail);\n        grandTotal += item.quantity * ((_item$menuItem4 = item.menuItem) === null || _item$menuItem4 === void 0 ? void 0 : _item$menuItem4.price);\n        totalItems += item.quantity;\n      });\n      const response = await createOrder({\n        pickupName: userInput.name,\n        pickupPhoneNumber: userInput.phoneNumber,\n        pickupEmail: userInput.email,\n        totalItems: totalItems,\n        orderTotal: grandTotal,\n        orderDetailsDTO: orderDetailsDTO,\n        stripePaymentIntentID: data.stripePaymentIntentId,\n        applicationUserId: data.userId,\n        status: result.paymentIntent.status === \"succeeded\" ? SD_Status.CONFIRMED : SD_Status.PENDING\n      });\n      if (response) {\n        var _response$data;\n        if (((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.result.status) === SD_Status.CONFIRMED) {\n          navigate(`/order/orderConfirmed/${response.data.result.orderHeaderId}`);\n        } else {\n          navigate(\"/failed\");\n        }\n      }\n    }\n    setIsProcessing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(PaymentElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !stripe || isProcessing,\n      className: \"btn btn-success mt-5 w-100\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"button-text\",\n        children: isProcessing ? \"Processing ... \" : \"Submit Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentForm, \"TeMYoQtCIhV9ULkyX5460SA4Ke4=\", false, function () {\n  return [useNavigate, useStripe, useElements, useCreateOrderMutation];\n});\n_c = PaymentForm;\nexport default PaymentForm;\nvar _c;\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["useStripe","useElements","PaymentElement","useState","useCreateOrderMutation","toastNotify","SD_Status","useNavigate","jsxDEV","_jsxDEV","PaymentForm","data","userInput","_s","navigate","stripe","elements","createOrder","isProcessing","setIsProcessing","handleSubmit","event","preventDefault","result","confirmPayment","confirmParams","return_url","redirect","error","_data$cartItems","grandTotal","totalItems","orderDetailsDTO","cartItems","forEach","item","_item$menuItem","_item$menuItem2","_item$menuItem3","_item$menuItem4","tempOrderDetail","menuItem","id","quantity","name","price","push","response","pickupName","pickupPhoneNumber","phoneNumber","pickupEmail","email","orderTotal","stripePaymentIntentID","stripePaymentIntentId","applicationUserId","userId","status","paymentIntent","CONFIRMED","PENDING","_response$data","orderHeaderId","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","className","_c","$RefreshReg$"],"sources":["C:/redmango_frontend/react_redMango/src/Components/Page/Payment/PaymentForm.tsx"],"sourcesContent":["import {\r\n  useStripe,\r\n  useElements,\r\n  PaymentElement,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { useState } from \"react\";\r\nimport { useCreateOrderMutation } from \"../../../Apis/orderApi\";\r\nimport { toastNotify } from \"../../../Helper\";\r\nimport { apiResponse, cartItemModel } from \"../../../Interfaces\";\r\nimport { SD_Status } from \"../../../Utility/SD\";\r\nimport { orderSummaryProps } from \"../Order/orderSummaryProps\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst PaymentForm = ({ data, userInput }: orderSummaryProps) => {\r\n  const navigate = useNavigate();\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [createOrder] = useCreateOrderMutation();\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n    setIsProcessing(true);\r\n    const result = await stripe.confirmPayment({\r\n      //`Elements` instance that was used to create the Payment Element\r\n      elements,\r\n      confirmParams: {\r\n        return_url: \"https://example.com/order/123/complete\",\r\n      },\r\n      redirect: \"if_required\",\r\n    });\r\n\r\n    if (result.error) {\r\n      // Show error to your customer (for example, payment details incomplete)\r\n      toastNotify(\"An unexpected error occured.\", \"error\");\r\n      setIsProcessing(false);\r\n    } else {\r\n      let grandTotal = 0;\r\n      let totalItems = 0;\r\n      const orderDetailsDTO: any = [];\r\n      data.cartItems?.forEach((item: cartItemModel) => {\r\n        const tempOrderDetail: any = {};\r\n        tempOrderDetail[\"menuItemId\"] = item.menuItem?.id;\r\n        tempOrderDetail[\"quantity\"] = item.quantity;\r\n        tempOrderDetail[\"itemName\"] = item.menuItem?.name;\r\n        tempOrderDetail[\"price\"] = item.menuItem?.price;\r\n        orderDetailsDTO.push(tempOrderDetail);\r\n        grandTotal += item.quantity! * item.menuItem?.price!;\r\n        totalItems += item.quantity!;\r\n      });\r\n\r\n      const response: apiResponse = await createOrder({\r\n        pickupName: userInput.name,\r\n        pickupPhoneNumber: userInput.phoneNumber,\r\n        pickupEmail: userInput.email,\r\n        totalItems: totalItems,\r\n        orderTotal: grandTotal,\r\n        orderDetailsDTO: orderDetailsDTO,\r\n        stripePaymentIntentID: data.stripePaymentIntentId,\r\n        applicationUserId: data.userId,\r\n        status:\r\n          result.paymentIntent.status === \"succeeded\"\r\n            ? SD_Status.CONFIRMED\r\n            : SD_Status.PENDING,\r\n      });\r\n\r\n      if (response) {\r\n        if (response.data?.result.status === SD_Status.CONFIRMED) {\r\n          navigate(\r\n            `/order/orderConfirmed/${response.data.result.orderHeaderId}`\r\n          );\r\n        } else {\r\n          navigate(\"/failed\");\r\n        }\r\n      }\r\n    }\r\n    setIsProcessing(false);\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <PaymentElement />\r\n      <button\r\n        disabled={!stripe || isProcessing}\r\n        className=\"btn btn-success mt-5 w-100\"\r\n      >\r\n        <span id=\"button-text\">\r\n          {isProcessing ? \"Processing ... \" : \"Submit Order\"}\r\n        </span>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}