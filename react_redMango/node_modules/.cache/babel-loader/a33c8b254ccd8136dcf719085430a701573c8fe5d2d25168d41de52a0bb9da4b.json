{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nconst menuItemApi = createApi({\n  reducerPath: \"menuItemApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://redmangoe-commerce.azurewebsites.net/api/\",\n    prepareHeaders: (headers, api) => {\n      const token = localStorage.getItem(\"token\");\n      token && headers.append(\"Authorization\", \"Bearer \" + token);\n    }\n  }),\n  tagTypes: [\"MenuItems\"],\n  endpoints: builder => ({\n    getMenuItems: builder.query({\n      query: () => ({\n        url: \"menuitem\"\n      }),\n      providesTags: [\"MenuItems\"]\n    }),\n    getMenuItemById: builder.query({\n      query: id => ({\n        url: `menuitem/${id}`\n      }),\n      providesTags: [\"MenuItems\"]\n    }),\n    createMenuItem: builder.mutation({\n      query: data => ({\n        url: \"menuitem\",\n        method: \"POST\",\n        body: data\n      }),\n      invalidatesTags: [\"MenuItems\"]\n    }),\n    updateMenuItem: builder.mutation({\n      query: ({\n        data,\n        id\n      }) => ({\n        url: \"menuitem/\" + id,\n        method: \"PUT\",\n        body: data\n      }),\n      invalidatesTags: [\"MenuItems\"]\n    }),\n    deleteMenuItem: builder.mutation({\n      query: id => ({\n        url: \"menuitem/\" + id,\n        method: \"DELETE\"\n      }),\n      invalidatesTags: [\"MenuItems\"]\n    })\n  })\n});\nexport const {\n  useGetMenuItemsQuery,\n  useGetMenuItemByIdQuery,\n  useCreateMenuItemMutation,\n  useUpdateMenuItemMutation,\n  useDeleteMenuItemMutation\n} = menuItemApi;\nexport default menuItemApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","menuItemApi","reducerPath","baseQuery","baseUrl","prepareHeaders","headers","api","token","localStorage","getItem","append","tagTypes","endpoints","builder","getMenuItems","query","url","providesTags","getMenuItemById","id","createMenuItem","mutation","data","method","body","invalidatesTags","updateMenuItem","deleteMenuItem","useGetMenuItemsQuery","useGetMenuItemByIdQuery","useCreateMenuItemMutation","useUpdateMenuItemMutation","useDeleteMenuItemMutation"],"sources":["C:/redmango_frontend/react_redMango/src/Apis/menuItemApi.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst menuItemApi = createApi({\r\n  reducerPath: \"menuItemApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://redmangoe-commerce.azurewebsites.net/api/\",\r\n    prepareHeaders: (headers: Headers, api) => {\r\n      const token = localStorage.getItem(\"token\");\r\n      token && headers.append(\"Authorization\", \"Bearer \" + token);\r\n    },\r\n  }),\r\n  tagTypes: [\"MenuItems\"],\r\n  endpoints: (builder) => ({\r\n    getMenuItems: builder.query({\r\n      query: () => ({\r\n        url: \"menuitem\",\r\n      }),\r\n      providesTags: [\"MenuItems\"],\r\n    }),\r\n    getMenuItemById: builder.query({\r\n      query: (id) => ({\r\n        url: `menuitem/${id}`,\r\n      }),\r\n      providesTags: [\"MenuItems\"],\r\n    }),\r\n    createMenuItem: builder.mutation({\r\n      query: (data) => ({\r\n        url: \"menuitem\",\r\n        method: \"POST\",\r\n        body: data,\r\n      }),\r\n      invalidatesTags: [\"MenuItems\"],\r\n    }),\r\n    updateMenuItem: builder.mutation({\r\n      query: ({ data, id }) => ({\r\n        url: \"menuitem/\" + id,\r\n        method: \"PUT\",\r\n        body: data,\r\n      }),\r\n      invalidatesTags: [\"MenuItems\"],\r\n    }),\r\n    deleteMenuItem: builder.mutation({\r\n      query: (id) => ({\r\n        url: \"menuitem/\" + id,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"MenuItems\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetMenuItemsQuery,\r\n  useGetMenuItemByIdQuery,\r\n  useCreateMenuItemMutation,\r\n  useUpdateMenuItemMutation,\r\n  useDeleteMenuItemMutation,\r\n} = menuItemApi;\r\nexport default menuItemApi;\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,MAAMC,WAAW,GAAGF,SAAS,CAAC;EAC5BG,WAAW,EAAE,aAAa;EAC1BC,SAAS,EAAEH,cAAc,CAAC;IACxBI,OAAO,EAAE,mDAAmD;IAC5DC,cAAc,EAAEA,CAACC,OAAgB,EAAEC,GAAG,KAAK;MACzC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3CF,KAAK,IAAIF,OAAO,CAACK,MAAM,CAAC,eAAe,EAAE,SAAS,GAAGH,KAAK,CAAC;IAC7D;EACF,CAAC,CAAC;EACFI,QAAQ,EAAE,CAAC,WAAW,CAAC;EACvBC,SAAS,EAAGC,OAAO,KAAM;IACvBC,YAAY,EAAED,OAAO,CAACE,KAAK,CAAC;MAC1BA,KAAK,EAAEA,CAAA,MAAO;QACZC,GAAG,EAAE;MACP,CAAC,CAAC;MACFC,YAAY,EAAE,CAAC,WAAW;IAC5B,CAAC,CAAC;IACFC,eAAe,EAAEL,OAAO,CAACE,KAAK,CAAC;MAC7BA,KAAK,EAAGI,EAAE,KAAM;QACdH,GAAG,EAAE,YAAYG,EAAE;MACrB,CAAC,CAAC;MACFF,YAAY,EAAE,CAAC,WAAW;IAC5B,CAAC,CAAC;IACFG,cAAc,EAAEP,OAAO,CAACQ,QAAQ,CAAC;MAC/BN,KAAK,EAAGO,IAAI,KAAM;QAChBN,GAAG,EAAE,UAAU;QACfO,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEF;MACR,CAAC,CAAC;MACFG,eAAe,EAAE,CAAC,WAAW;IAC/B,CAAC,CAAC;IACFC,cAAc,EAAEb,OAAO,CAACQ,QAAQ,CAAC;MAC/BN,KAAK,EAAEA,CAAC;QAAEO,IAAI;QAAEH;MAAG,CAAC,MAAM;QACxBH,GAAG,EAAE,WAAW,GAAGG,EAAE;QACrBI,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEF;MACR,CAAC,CAAC;MACFG,eAAe,EAAE,CAAC,WAAW;IAC/B,CAAC,CAAC;IACFE,cAAc,EAAEd,OAAO,CAACQ,QAAQ,CAAC;MAC/BN,KAAK,EAAGI,EAAE,KAAM;QACdH,GAAG,EAAE,WAAW,GAAGG,EAAE;QACrBI,MAAM,EAAE;MACV,CAAC,CAAC;MACFE,eAAe,EAAE,CAAC,WAAW;IAC/B,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EACXG,oBAAoB;EACpBC,uBAAuB;EACvBC,yBAAyB;EACzBC,yBAAyB;EACzBC;AACF,CAAC,GAAGhC,WAAW;AACf,eAAeA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}